server:
  port: 7001
  servlet:
    context-path: /nacos-consumer #配置项目名

spring:
  application:
    name: nacos-consumer # 服务名称
  cloud:
    nacos:
      server-addr: localhost:8848 # 配置nacos 服务端地址
      cluster-name: HZ # 集群名称（Nacos分级存储模型 服务->集群->实例，同级群优先，集群内随机，同级群都挂了再访问别的集群，但会报警告）
    sentinel:
      transport:
        dashboard: localhost:8080 # sentinel控制台地址
      web-context-unify: false # 关闭context整合
      datasource: #Sentinel监听nacos，实现push方式的规则持久化（相当于将sentinel的各种规则以配置文件的方式持久化到nacos）
        flow: #持久化限流规则到nacos
          nacos:
            server-addr: localhost:8848 # nacos地址
            dataId: nacos-consumer-flow-rules  #唯一配置文件的标识（不能随便写，格式是固定的：applicationName-flow-rules）
            groupId: SENTINEL_GROUP  #属于哪个组
            rule-type: flow #（限流信息） 还可以是：degrade（降级信息）、authority（授权规则信息）、param-flow（热点参数限流信息）

#为某个服务开启饥饿加载（在项目启动时就会初始化LoadBalancer，默认是懒加载，即第一次访问时才会去创建LoadBalanceClient，请求时间会很长）
ribbon:
  ConnectTimeout: 1000 # 连接超时时间 默认1s
  ReadTimeout: 1000 # 逻辑处理的超时时间,即通信超时时间 默认1s
  eager-load:
    enabled: true
    clients:
      - nacos-provider

logging:
  level:
    com.adolesce: debug
  pattern:
    dateformat: MM-dd HH:mm:ss:SSS

feign:
  #  hystrix:
  #    enabled: true  # 开启feign对hystrix的支持（客户端服务降级/熔断等）
  sentinel:
    enabled: true # 开启feign对sentinel的支持（客户端服务降级/熔断/限流等）
  client:
    config:
      httpclient: #使用Apache HttpClient 优化Feign调用性能
        enabled: true # 开启feign对HttpClient的支持
        max-connections: 200 # 最大连接数
        max-connections-per-route: 50 # 单个路径的最大连接数
#      default: # default是针对全局服务，也可配置针对某个微服务
#        loggerLevel: FULL #  日志级别

# 设置Hystrix超时时间（到达该时间服务提供方仍未响应，则走服务降级逻辑）【合理的时间应该设置为 重试次数*ribbon.ReadTimeout，以保证ribbon重试次数都能够执行完】
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 2000